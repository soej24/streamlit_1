# 피쳐스케일링 한 Y를 원래 값으로 돌리려면 스케일러가 실행된 변수가 있어야 한다. inverse_transform 으로 역으로 변경할수 있다.
scaler_y.inverse_transform(y_pred)

# 유저가 앱을 통해서 데이터를 입력햇습니다.
# 이 사람은 얼마정도의 차를 구매할수 있을지 예측해서
# 그 사람한테 맞는 차를 보여주려고 합니다.

# 여자이고, 나이는 38살, 연봉은 78,000달러, 카드빚은 15,000달러이고
# 자산은 480,000 달러입니다.

# 이 사람은 얼마짜리 차를 구매할 여력이 될까요?

new_data = np.array( [0, 38, 78000, 15000, 480000 ] )
new_data.shape  # 1차원이기 때문에 2차원으로 바꿔준다.
new_data = new_data.reshape(1, 5)
regressor.predict(new_data)
array([[241470.66~~~~~~~~]])

# 피쳐스케일링 한것을 다시 new_data에 저장
new_data = scaler_X.transform(new_data)

y_pred = regressor.predict(new_data)
y_pred

scaler_y.inverse_transform(y_pred)
array([[47606.~~~~~~--]])

--------------------------------------------------------------------------------------------------
RandomForest 나 XGBoost
(디시전트리를 여러번~ 성능을 

from sklearn.ensemble import RandomForestRegressor
regressor = RandomForestRegressor(random_state=50)

regressor.fit(X_train, y_train.ravel()) # 1차원으로 해라
y_pred = regressor.predict(X_test)

y_test.ravel()  # 1차원 만들기

((y_test.ravel() - y_pred) ** 2).mean()

---------------------------------------------------------------------------------------------


